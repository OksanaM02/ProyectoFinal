openapi: 3.0.0
info:
  title: Tiendecita
  description: API para gestionar carrito de compras, pedidos, productos y usuarios
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
paths:
  /carrito/agregar/{id}:
    post:
      summary: Agrega un producto al carrito
      tags:
        - Carrito
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto agregado al carrito correctamente
  /carrito/eliminar/{id}:
    delete:
      summary: Elimina un producto del carrito
      tags:
        - Carrito
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado del carrito correctamente
  /carrito/detalles:
    get:
      summary: Obtiene los detalles del carrito
      tags:
        - Carrito
      responses:
        '200':
          description: Detalles del carrito obtenidos correctamente
  /pedido/addPedido:
    post:
      summary: Crea un nuevo pedido
      tags:
        - Pedido
      responses:
        '200':
          description: Pedido creado correctamente
  /pedido/eliminar/{id}:
    delete:
      summary: Elimina un pedido
      tags:
        - Pedido
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pedido eliminado correctamente
  /pedido/verPedidos:
    get:
      summary: Obtiene la lista de pedidos
      tags:
        - Pedido
      responses:
        '200':
          description: Lista de pedidos obtenida correctamente
  /producto/createProducto:
    post:
      summary: Crea un nuevo producto
      tags:
        - Producto
      responses:
        '200':
          description: Producto creado correctamente
  /producto/getProducto:
    get:
      summary: Obtiene la lista de productos
      tags:
        - Producto
      responses:
        '200':
          description: Lista de productos obtenida correctamente
  /producto/deleteProducto/{id}:
    delete:
      summary: Elimina un producto
      tags:
        - Producto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado correctamente
  /producto/updateProducto/{id}:
    put:
      summary: Actualiza un producto
      tags:
        - Producto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto actualizado correctamente
  /usuarios:
    get:
      summary: Obtiene la lista de usuarios
      tags:
        - Usuario
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
    post:
      summary: Crea un nuevo usuario
      tags:
        - Usuario
      responses:
        '200':
          description: Usuario creado correctamente
    delete:
      summary: Elimina un usuario
      tags:
        - Usuario
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuario eliminado correctamente
    patch:
      summary: Actualiza un usuario
      tags:
        - Usuario
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuario actualizado correctamente
components:
  schemas:
    Cart:
      type: object
      properties:
        name:
          type: string
          description: Nombre del producto en el carrito
        img:
          type: string
          description: URL de la imagen del producto
        cantidad:
          type: integer
          description: Cantidad del producto en el carrito
        price:
          type: number
          description: Precio del producto en el carrito
    Pedido:
      type: object
      properties:
        productos:
          type: array
          items:
            type: object
            properties:
              producto:
                $ref: '#/components/schemas/Producto'
              cantidad:
                type: integer
        total:
          type: number
          description: Total del pedido
    Producto:
      type: object
      properties:
        name:
          type: string
          description: Nombre del producto
        img:
          type: string
          description: URL de la imagen del producto
        descripcion:
          type: string
          description: Descripción del producto
        alergenos:
          type: string
          description: Alergenos del producto
        price:
          type: number
          description: Precio del producto
        cantidad:
          type: integer
          description: Cantidad del producto
    User:
      type: object
      properties:
        username:
          type: string
          description: Nombre de usuario
        email:
          type: string
          description: Correo electrónico del usuario
        phoneNumber:
          type: number
          description: Número de teléfono del usuario
        password:
          type: string
          description: Contraseña del usuario
        profilePicture:
          type: string
          description: URL de la imagen de perfil del usuario
        role:
          type: string
          description: Rol del usuario
        address:
          type: object
          properties:
            street:
              type: string
              description: Calle de la dirección del usuario
            city:
              type: string
              description: Ciudad de la dirección del usuario
            state:
              type: string
              description: Estado de la dirección del usuario
